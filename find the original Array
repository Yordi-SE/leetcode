/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* findOriginalArray(int* changed, int changedSize, int* returnSize)
{
    int l = 0,t = changedSize / 2;
    int *d = malloc(sizeof(int) * (changedSize));
    for (int i = 0; i < (changedSize); i++)
    {
        
         if ((changed[i] * 2) == changed[i + t])
         {
             d[l] = changed[i];
             l++;
         }
         if (i == (t) - 1)
                break;
    }
    
    if ((l) != (t))
    {
    if (changedSize == 2)
    {
        for (int i = 0; i < (changedSize); i++)
        {
            if (changed[1] * 2 == changed[0])
            {
                d[0] = changed[1];
                *returnSize = 1;
                return d;
            }
        }
    }
        *returnSize = 0;
        return d;
    }
     *returnSize = t;
    return d;

}
