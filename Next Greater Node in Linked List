class Solution:
    def nextLargerNodes(self, head: Optional[ListNode]) -> List[int]:
        head2 = head
        stack = []
        count =  0
        while head2 != None:
            count += 1
            head2 = head2.next
        answer = [0] * count
        head2 = head
        count = 0
        while head2 != None:
            while stack and stack[-1][0] < head2.val:
                    l = stack.pop()
                    answer[l[1]] = head2.val
            stack.append((head2.val, count))
            count += 1
            head2 = head2.next

        return answer
