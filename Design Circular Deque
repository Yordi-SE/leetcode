class MyCircularDeque:

    from collections import deque
    def __init__(self, k: int):
        self.deque = deque(maxlen=k)
        self.len = k
        

    def insertFront(self, value: int) -> bool:
        if len(self.deque) == self.len:
            return False
        self.deque.appendleft(value)
        return True
        
    def insertLast(self, value: int) -> bool:
        if len(self.deque) == self.len:
            return False
        self.deque.append(value)
        return True
        

    def deleteFront(self) -> bool:
        if len(self.deque) == 0:
            return False
        self.deque.popleft()
        return True
        

    def deleteLast(self) -> bool:
        if len(self.deque) == 0:
            return False
        self.deque.pop()
        return True
        

    def getFront(self) -> int:
        if len(self.deque) == 0:
            return -1
        return self.deque[0]

        

    def getRear(self) -> int:
        if len(self.deque) == 0:
            return -1
        return self.deque[-1]

    def isEmpty(self) -> bool:
        if len(self.deque) == 0:
            return True
        return False
        

    def isFull(self) -> bool:
        if len(self.deque) == self.len:
            return True
        return False
